---

- debug:
    var: package

- name: remove_package | Get Package NVRA string (Name-Version-Release-Architecture)
  set_fact:
    name: "{{ package | regex_replace('(.+)-.+-.+\\..+\\.rpm', '\\1') }}"
    version: "{{ package | regex_replace('.+-(.+)-.+\\..+\\.rpm', '\\1') }}"
    release: "{{ package | regex_replace('.+-.+-(.+)\\..+\\.rpm', '\\1') }}"
    arch: "{{ package | regex_replace('.+-.+-.+\\.(.+)\\.rpm', '\\1') }}"

- name: remove_package | Check and Get rpm content HREF
  uri:
    url: >
      {{ pulp_api_server }}/pulp/api/v3/content/rpm/packages/?name={{
         name }}&version={{ version}}&release={{ release }}&arch={{ arch }}
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: y
    status_code: 200
  register: content

# Remove package if content exist
- block:

    - name: remove_package | Remove package {{ package }} in repo {{ repo_name }}
      uri:
        url: {{ pulp_api_server }}{{ repo_href }}versions/
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: POST
        body: {"remove_content_units":"{{ [content.json.results[0]._href] }}"}
        force_basic_auth: y
        status_code: 202
        body_format: json
      changed_when: task.status == 202
      register: task

    - name: remove_package | Store task HREF
      set_fact:
        repo_tasks: "{{ [repo_tasks, task.json.task] | flatten }}"

  when: content.json.count == 1
