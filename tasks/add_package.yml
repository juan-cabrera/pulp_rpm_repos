---

- name: add_package | Check and Get rpm content HREF
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/content/rpm/packages/?pkgId={{ package.pkgId }}"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: y
    status_code: 200
  register: content

- name: add_package | Package content not found
  fail:
    msg: "\nERROR: package content {{ package.name }} not found.\n"
  when: content.json.count == 0

- name: add_package | Get Last Version HREF for repo {{ repo_name }}
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/repositories/rpm/rpm/?name={{ repo_name }}"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: y
    status_code: 200
  register: repo

# The repo is empty => add package
- block:

    - name: add_package | Add package {{ package.name }} in repo {{ repo_name }}
      uri:
        url: "{{ pulp_api_server }}{{ repo_href }}modify/"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: POST
        body: {"add_content_units":"{{ [content.json.results[0].pulp_href] }}"}
        force_basic_auth: y
        status_code: 202
        body_format: json
      changed_when: task.status == 202
      register: task

    - name: add_package | Store task HREF
      set_fact:
        repo_tasks: "{{ [repo_tasks, task.json.task] | flatten }}"

  when: repo.json.results[0].latest_version_href == none

# The repo is NOT empty => check package is present
# If package not present => add it
- block:

    - name: add_package | Check if package is already in repo
      uri:
        url: >
          {{ pulp_api_server }}/pulp/api/v3/content/rpm/packages/?repository_version={{
           repo.json.results[0].latest_version_href }}&pkgId={{ package.pkgId }}
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: GET
        force_basic_auth: y
        status_code: 200
      register: check

    - name: add_package | Add package {{ package.name }} in repo {{ repo_name }}
      uri:
        url: "{{ pulp_api_server }}{{ repo_href }}modify/"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: POST
        body: {"add_content_units":"{{ [content.json.results[0].pulp_href] }}"}
        force_basic_auth: y
        status_code: 202
        body_format: json
      changed_when: task.status == 202
      register: task
      when: check.json.count == 0

    - name: add_package | Store task HREF
      set_fact:
        repo_tasks: "{{ [repo_tasks, task.json.task] | flatten }}"
      when: check.json.count == 0

  when: repo.json.results[0].latest_version_href != none
