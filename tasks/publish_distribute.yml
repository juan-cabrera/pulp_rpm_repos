---

- name: config | Get repo {{ item.repo }} HREF
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/repositories/?name={{ item.repo }}"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
  register: repo

- fail:
    msg: "repo {{ item.repo }} not found. You need to create the repo first"
  when: repo.json.count != 1

- name: config | Set latest version HREF
  set_fact:
    repo_version_href: "{{ repo.json.results[0]._latest_version_href }}"
  when: "'latest' in item.repo_version"

- name: config | Set and Check {{ item.repo_version }} version HREF
  block:

    - name: Set {{ item.repo_version }} version HREF
      set_fact:
        repo_version_href: "{{ repo.json.results[0]._href }}versions/{{ item.repo_version }}/"

    - name: config | Check repo {{ item.repo }} version {{ item.repo_version }} exists
      uri:
        url: "{{ pulp_api_server }}{{ repo_version_href }}"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: GET
        force_basic_auth: yes
        status_code: 200

  when: "'latest' not in item.repo_version"

# Check if publication already exists
- name: config | Get {{ item.repo }} publications list
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/publications/rpm/rpm/"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200,404
  register: publication

- name: config | Looking for version {{ item.repo_version }} publication
  set_fact:
    publication_check: "NOT_FOUND"
  when: publication.json.count == 0

- name: config | Looking for version {{ item.repo_version }} publication
  set_fact:
    publication_check: "{{ publication.json.results | selectattr('repository_version', 'match', repo_version_href ) | list | first | default('NOT_FOUND') }}"
  when: publication.json.count > 0

- name: config | Get version {{ item.repo_version }} publication HREF
  set_fact:
    publication_href: "{{ publication_check._href }}"
  when: "'NOT_FOUND' not in publication_check"

- name: config | publication does not exist
  block:

    - name: config | Create publication for repo {{ item.repo }}
      uri:
        url: "{{ pulp_api_server }}/pulp/api/v3/publications/rpm/rpm/"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: POST
        body: { "repository_version":"{{ repo_version_href }}" }
        #body: { "repository":"{{ repo.href }}" }
        force_basic_auth: yes
        status_code: 202
        body_format: json
      changed_when: publication.status == 202
      register: publication
    
    - name: config | Waiting end of {{ item.repo }} repo publication
      include_tasks: wait_task.yml
      vars:
        task_href: "{{ publication.json.task }}"

    - name: config | Get end task status
      uri:
        url: "{{ pulp_api_server }}{{ publication.json.task }}"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: GET
        force_basic_auth: yes
        status_code: 200
      register: task

    - name: config | Get publication HREF
      set_fact:
        publication_href: "{{ task.json.created_resources | first }}"

  when: "'NOT_FOUND' in publication_check"

- name: config | Check if {{ item.repo }} distribution {{ item.distribution }} already exists and get its HREF
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/distributions/rpm/rpm/?name={{ item.distribution }}"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200,404
    body_format: json
    return_content: yes
  register: distribution_check

- name: config | Create distribution {{ item.distribution }} for repo {{ item.repo }}
  uri:
    url: "{{ pulp_api_server }}/pulp/api/v3/distributions/rpm/rpm/"
    user: "{{ pulp_admin_user }}"
    password: "{{ pulp_default_admin_password }}"
    method: POST
    body: { "name":"{{ item.distribution }}","base_path":"{{ item.base_path }}","publication":"{{ publication_href }}" }
    force_basic_auth: yes
    status_code: 202
    body_format: json
    return_content: yes
  changed_when: distribution.status == 202
  register: distribution
  when: "distribution_check.json.count == 0"

- name: config | Distribution alredy exists
  block:

    - name: config | Re-attach (PATCH) {{ item.repo }} publication to {{ item.distribution }} distribution
      uri:
        url: "{{ pulp_api_server }}{{ distribution_check.json.results[0]._href }}"
        user: "{{ pulp_admin_user }}"
        password: "{{ pulp_default_admin_password }}"
        method: PATCH
        body: { "name":"{{ item.distribution }}","base_path":"{{ item.base_path }}","publication":"{{ publication_href }}" }
        force_basic_auth: yes
        status_code: 202
        body_format: json
        return_content: yes
      changed_when: patch_result.status == 202
      register: patch_result
      when: "publication_href not in distribution_check.json.results[0].publication"

  when: "distribution_check.json.count == 1"
